namespace "enesim" {
	abstract "renderer" {
		string "name";
		matrix "transformation";
		matrix "geometry_transformation";
		double "x_origin";
		double "y_origin";
		double "x_scale";
		double "y_scale";
		color "color";
		int "rop" [ "blend", "fill" ];
		renderer "mask";
	};
};

namespace "enesim.renderer" {
	abstract "shape" : "renderer" {
		int "draw_mode";
		double "stroke_weight";
		color "stroke_color";
		renderer "stroke_renderer";
		int "stroke_location";
		int "stroke_cap";
		int "stroke_join";
		color "fill_color";
		renderer "fill_renderer";
	};

	class "line" : "shape" {
		double "x0";
		double "y0";
		double "x1";
		double "y1";
	};

	class "rectangle" : "shape" {
		double "x";
		double "y";
		double "width";
		double "height";
		double "corner_radius";
		bool "top_left_corner";
		bool "top_right_corner";
		bool "bottom_left_corner";
		bool "bottom_right_corner";
	};

	class "circle" : "shape" {
		double "x";
		double "y";
		double "radius";
	};

	class "ellipse" : "shape" {
		double "x";
		double "y";
		double "x_radius";
		double "y_radius";
	};

	struct "point" {
		double "x";
		double "y";
	};

	struct "polygon" {
		[point] "points";
	};

	class "figure" : "shape" {
		[polygon] "polygon";
	};

	struct "move_to" {
		double "x";
		double "y";
	};

	struct "line_to" {
		double "x";
		double "y";
	};

	struct "squadratic_to" {
		double "x";
		double "y";
	};

	struct "quadratic_to" {
		double "x";
		double "y";
		double "ctrl_x";
		double "ctrl_y";
	};

	struct "cubic_to" {
		double "x";
		double "y";
		double "ctrl_x0";
		double "ctrl_y0";
		double "ctrl_x1";
		double "ctrl_y1";
	};

	struct "scubic_to" {
		double "x";
		double "y";
		double "ctrl_x";
		double "ctrl_y";
	};

	struct "arc_to" {
		double "rx";
		double "ry";
		double "angle";
		double "x";
		double "y";
		bool "large";
		bool "sweep";
	};

	struct "close" {
		bool "close";
	};

	union "command" {
		move_to "m";
		line_to "l";
		squadratic_to "sq";
		quadratic_to "q";
		cubic_to "c";
		scubic_to "sc";
		arc_to "a";
		close "z";
	};

	class "path" : "shape" {
		[command] "command";
	};

	class "checker" : "renderer" {
		uint "width";
		uint "height";
		color "even_color";
		color "odd_color";
	};

	class "image" : "renderer" {
		surface "src";
		double "x";
		double "y";
		double "width";
		double "height";
	};

	class "dispmap" : "renderer" {
		surface "map";
		surface "src";
		int "x_channel";
		int "y_channel";
		double "factor";
	};

	class "hswitch" : "renderer" {
		uint "w";
		uint "h";
		renderer "left";
		renderer "right";
		double "step";
	};

	class "grid" : "renderer" {
		uint "inside_width";
		uint "inside_height";
		color "inside_color";
		uint "border_vthickness";
		uint "border_hthickness";
		color "border_color";
	};

	class "perlin" : "renderer" {
		uint "octaves";
		double "persistence";
		double "xfrequency";
		double "yfrequency";
	};

	class "raddist" : "renderer" {
		surface "src";
		uint "x";
		uint "y";
		double "radius";
		double "factor";
	};

	class "stripes" : "renderer" {
		double "even_thickness";
		color "even_color";
		renderer "even_renderer";
		double "odd_thickness";
		color "odd_color";
		renderer "odd_renderer";
	};

	class "compound" : "renderer" {
		[renderer] "layer";
	};

	struct "stop" {
		argb "color";
		double "pos";
	};

	abstract "gradient" : "renderer" {
		uint "mode";
		[stop] "stop";
	};

	class "gradient_linear" : "gradient" {
		double "x0";
		double "y0";
		double "x1";
		double "y1";
	};

	class "gradient_radial" : "gradient" {
		double "center_x";
		double "center_y";
		double "focus_x";
		double "focus_y";
		double "radius";
	};

	class "pattern" : "renderer" {
		double "x";
		double "y";
		double "width";
		double "height";
		int "repeat_mode";
		renderer "source";
	};

	class "background" : "renderer" {
		color "color";
	};

	class "transition" : "renderer" {
		double "level";
		renderer "source";
		renderer "target";
	};

	class "clipper" : "renderer" {
		double "width";
		double "height";
		renderer "content";
	};
};
