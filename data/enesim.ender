namespace enesim {
	abstract renderer {
		matrix transformation;
		double x_origin;
		double y_origin;
	};
};

namespace enesim.renderer {
	abstract shape : renderer {
		double outline_weight;
		color outline_color;
		color fill_color;
		renderer fill_renderer;
		int draw_mode;
	};

	class rectangle : shape {
		unsigned int width;
		unsigned int height;
		double corner_radius;
	};

	class circle : shape {
		double x;
		double y;
		double radius;
	};

	class ellipse : shape {
		double x;
		double y;
		double x_radius;
		double y_radius;
	};

	class figure : shape {
		[[double, double]] polygon;
	};

	class checker : renderer {
		unsigned int width;
		unsigned int height;
		color even_color;
		color odd_color;
	};

	class image : renderer {
		surface src;
		int x;
		int y;
		int w;
		int h;
	};

	class dispmap : renderer {
		surface map;
		surface src;
		int x_channel;
		int y_channel;
		float factor;
	};

	class grid : renderer {
		unsigned int inside_width;
		unsigned int inside_height;
		color inside_color;
		unsigned int border_vthickness;
		unsigned int border_hthickness;
		color border_color;
	};

	class perlin : renderer {
		unsigned int octaves;
		float persistence;
		float xfrequency;
		float yfrequency;
	};

	class raddist : renderer {
		surface src;
		unsigned int x;
		unsigned int y;
		float radius;
		float factor;
	};

	class stripes : renderer {
		float even_thickness;
		color even_color;
		float odd_thickness;
		color odd_color;
	};

	class compound : renderer {
		[renderer,int] layer;
	};

	abstract gradient : renderer {
		[color, double] stop;
	};

	class gradient_linear : gradient {
		double x0;
		double y0;
		double x1;
		double y1;
	};
};
